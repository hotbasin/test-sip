swagger: '2.0'
info:
  title: Swagger for Bottle
  description: Sample config for swagger in a Bottle
host: '127.0.0.1:8080'
schemes:
  - http
basePath: /
info:
  version: 1.0.0
  title: python-swagger-ui test api
  description: python-swagger-ui test api
tags:
  - name: default
    description: default tag
  - name: getmethods
    description: tag for GET methods
  - name: postmethods
    description: tag for POST methods

paths:
  /srv1/auth/login:
    get:
      tags:
        - getmethods
      summary: User login to server
      description: ''
      parameters:
        - name: login
          in: query
          description: User login name
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: User password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User login result
          content:
            application/json:
              schema:
                type: string
                example: |
                  {
                    "status": "success",
                    "text": "User user1: logged in",
                    "acc_token": "4fe75f23-2bf8-482f-94d8-3e51663c410a",
                    "expired": 1692021237.7405028
                  }

  /srv1/admin/adduser:
    post:
      summary: Add new user
      parameters:
        - name: req_data
          required: True
          description: JSON Web Token
      produces:
        - application/text
      responses:
        '200':
          description: OK
          schema:
            example: |
              {
              status: "success",
              text: "User user_login: added"
              }

  /srv1/abon/all:
    get:
      summary: Show all abonents in database
      parameters:
        - name: req_data
          required: True
          description: JSON Web Token
      produces:
        - application/text
      responses:
        '200':
          description: OK
          schema:
            example: |
              {
              status: 'success',
              text: 'Authorized request',
              all_abon: {...}
              }
      tags:
        - default

  /srv1/call/sample:
    post:
      summary: Test Call
      parameters:
        - name: gw_addr
          in: json
          required: True
          description: SIP-gateway IP or FQDN
        - name: gw_login
          in: json
          required: True
          description: User ID for SIP-gateway
        - name: gw_password
          in: json
          required: True
          description: User password for SIP-gateway
        - name: phone_num
          in: json
          required: True
          description: Phone number to call test
      produces:
        - application/text
      responses:
        '200':
          description: OK
          schema:
            example: |
              {
              status: "success",
              text: "OK"
              }
